# MediaPipe graph that performs selfie segmentation with TensorFlow Lite on GPU.

# GPU buffer. (GpuBuffer)
input_stream: "input_video"

input_stream: "mask_color"
input_stream: "output_selector"

# Output image with rendered results. (GpuBuffer)
output_stream: "output_video"


# Throttles the images flowing downstream for flow control. It passes through
# the very first incoming image unaltered, and waits for downstream nodes
# (calculators and subgraphs) in the graph to finish their tasks before it
# passes through another image. All images that come in while waiting are
# dropped, limiting the number of in-flight images in most part of the graph to
# 1. This prevents the downstream nodes from queuing up incoming images and data
# excessively, which leads to increased latency and memory usage, unwanted in
# real-time mobile applications. It also eliminates unnecessarily computation,
# e.g., the output produced by a node may get dropped downstream if the
# subsequent nodes are still busy processing previous inputs.
node {
  calculator: "FlowLimiterCalculator"
  input_stream: "input_video"  
  input_stream: "FINISHED:output_video"
  input_stream_info: {
    tag_index: "FINISHED"
    back_edge: true
  }
  output_stream: "throttled_input_video"  
}

# Subgraph that performs selfie segmentation.
node {
  calculator: "SelfieSegmentationGpu"
  input_stream: "IMAGE:throttled_input_video"
  output_stream: "SEGMENTATION_MASK:segmentation_mask"
}


# Colors the selfie segmentation with the color specified in the option.
node {
  calculator: "RecolorCalculatorV1"
  input_stream: "IMAGE_GPU:throttled_input_video"
  input_stream: "MASK_GPU:segmentation_mask"
  input_stream: "COLOR:mask_color"
  output_stream: "IMAGE_GPU:masked_output_video"
  node_options: {
    [type.googleapis.com/mediapipe.RecolorCalculatorOptions] {
      color { r: 0 g: 150 b: 0 }
      mask_channel: RED
      invert_mask: true
      adjust_with_luminance: false
    }
  }
  input_stream_handler {
    input_stream_handler: "SyncSetInputStreamHandler"
    options {
      [mediapipe.SyncSetInputStreamHandlerOptions.ext] {
        sync_set {
          tag_index: "IMAGE_GPU"
          tag_index: "MASK_GPU"
        }
        sync_set {
          tag_index: "COLOR"          
        }        
      }
    }
  }     
}

node {
  calculator: "MuxCalculatorV1"
  input_stream: "INPUT:0:masked_output_video"
  input_stream: "INPUT:1:throttled_input_video"
  input_stream: "SELECT:output_selector"
  output_stream: "OUTPUT:output_video"
  input_stream_handler {
    input_stream_handler: "SyncSetInputStreamHandler"
    options {
      [mediapipe.SyncSetInputStreamHandlerOptions.ext] {
        sync_set {
          tag_index: "INPUT:0"
          tag_index: "INPUT:1"
        }
        sync_set {
          tag_index: "SELECT"          
        }        
      }
    }
  }
}
  
